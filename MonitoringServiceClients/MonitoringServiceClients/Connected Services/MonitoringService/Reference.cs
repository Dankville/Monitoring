//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MonitoringServiceClients.MonitoringService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MonitoringService.IPubSubService", CallbackContract=typeof(MonitoringServiceClients.MonitoringService.IPubSubServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IPubSubService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPubSubService/Subscribe", ReplyAction="http://tempuri.org/IPubSubService/SubscribeResponse")]
        void Subscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPubSubService/Subscribe", ReplyAction="http://tempuri.org/IPubSubService/SubscribeResponse")]
        System.Threading.Tasks.Task SubscribeAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsTerminating=true, Action="http://tempuri.org/IPubSubService/UnSubscribe", ReplyAction="http://tempuri.org/IPubSubService/UnSubscribeResponse")]
        void UnSubscribe();
        
        [System.ServiceModel.OperationContractAttribute(IsTerminating=true, Action="http://tempuri.org/IPubSubService/UnSubscribe", ReplyAction="http://tempuri.org/IPubSubService/UnSubscribeResponse")]
        System.Threading.Tasks.Task UnSubscribeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPubSubService/PublishMethodRan", ReplyAction="http://tempuri.org/IPubSubService/PublishMethodRanResponse")]
        void PublishMethodRan(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPubSubService/PublishMethodRan", ReplyAction="http://tempuri.org/IPubSubService/PublishMethodRanResponse")]
        System.Threading.Tasks.Task PublishMethodRanAsync(string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPubSubServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IPubSubService/MethodRan")]
        void MethodRan(string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPubSubServiceChannel : MonitoringServiceClients.MonitoringService.IPubSubService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PubSubServiceClient : System.ServiceModel.DuplexClientBase<MonitoringServiceClients.MonitoringService.IPubSubService>, MonitoringServiceClients.MonitoringService.IPubSubService {
        
        public PubSubServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public PubSubServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public PubSubServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public PubSubServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public PubSubServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Subscribe() {
            base.Channel.Subscribe();
        }
        
        public System.Threading.Tasks.Task SubscribeAsync() {
            return base.Channel.SubscribeAsync();
        }
        
        public void UnSubscribe() {
            base.Channel.UnSubscribe();
        }
        
        public System.Threading.Tasks.Task UnSubscribeAsync() {
            return base.Channel.UnSubscribeAsync();
        }
        
        public void PublishMethodRan(string message) {
            base.Channel.PublishMethodRan(message);
        }
        
        public System.Threading.Tasks.Task PublishMethodRanAsync(string message) {
            return base.Channel.PublishMethodRanAsync(message);
        }
    }
}
